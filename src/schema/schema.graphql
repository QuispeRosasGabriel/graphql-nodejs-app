"Definiciones de los tipos de raiz"
type Query {
    "Lista de usuarios registrados en la base de datos (Clientes/Adminsitradores)"
    users: ResultUsers
    "Para iniciar sesion de usuario"
    login(email: String!, password: String!): ResultLogin
}

"Opciones Crud"
type Mutation {
    register(user: UserInput): User
}

"Interface para especificar las propiedades obligatorias"
interface Result{
    status: Boolean!
    message: String!
}

type ResultUsers implements Result {
    status: Boolean!
    message: String!
    users: [User!]!
}


type ResultLogin implements Result {
    status: Boolean!
    message: String!
    user: User
}
"""
Especificar informacion detallada del usuario
email = usuario de la base de datos
fecha de nacimiento y registro en formato ISO
"""
type User {
    id: ID!
    name: String!
    lastname: String!
    email: String!
    password: String!
    registerDate: String!
    birthdate: String!
    role: Role!
}

"Input para a√±adir los datos del usuario en el registro"
input UserInput {
    id: ID
    name: String!
    lastname: String!
    email: String!
    password: String!
    birthdate: String!
    role: Role=CLIENT
}

enum Role {
    CLIENT,
    ADMIN
}